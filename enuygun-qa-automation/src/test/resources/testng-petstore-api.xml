<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">

<suite name="Petstore API Test Suite" verbose="1" parallel="classes" thread-count="3">
    
    <parameter name="baseUrl" value="https://petstore.swagger.io/v2"/>
    <parameter name="timeout" value="10000"/>
    <parameter name="retryCount" value="1"/>
    
    <!-- Global test configuration -->
    
    <!-- Positive API Tests -->
    <test name="Pet API Positive Tests" preserve-order="true">
        <parameter name="testType" value="positive"/>
        <parameter name="environment" value="staging"/>
        
        <classes>
            <class name="com.enuygun.qa.api.tests.PetApiTest">
                <methods>
                    <include name="testCreatePet"/>
                    <include name="testGetPetById"/>
                    <include name="testUpdatePet"/>
                    <include name="testFindPetsByStatusAvailable"/>
                    <include name="testFindPetsByMultipleStatuses"/>
                    <include name="testFindPetsByTags"/>
                    <include name="testCreatePetMinimalData"/>
                    <include name="testCreateDifferentPetTypes"/>
                    <include name="testResponseHeaders"/>
                    <include name="testDeletePet"/>
                </methods>
            </class>
        </classes>
    </test>
    
    <!-- Negative API Tests -->
    <test name="Pet API Negative Tests" preserve-order="true">
        <parameter name="testType" value="negative"/>
        <parameter name="environment" value="staging"/>
        
        <classes>
            <class name="com.enuygun.qa.api.tests.PetApiNegativeTest">
                <methods>
                    <include name="testCreatePetWithInvalidJson"/>
                    <include name="testCreatePetWithMissingRequiredFields"/>
                    <include name="testCreatePetWithEmptyPhotoUrls"/>
                    <include name="testCreatePetWithInvalidStatus"/>
                    <include name="testGetNonExistentPet"/>
                    <include name="testGetPetWithInvalidIdFormat"/>
                    <include name="testUpdateNonExistentPet"/>
                    <include name="testUpdatePetWithInvalidData"/>
                    <include name="testDeleteNonExistentPet"/>
                    <include name="testFindPetsByInvalidStatus"/>
                    <include name="testCreatePetWithLongName"/>
                    <include name="testCreatePetWithInvalidPhotoUrl"/>
                </methods>
            </class>
        </classes>
    </test>
    
    <!-- Combined Test Suite (runs both positive and negative) -->
    <test name="Complete Pet API Test Suite" preserve-order="true" enabled="false">
        <parameter name="testType" value="complete"/>
        <parameter name="environment" value="staging"/>
        
        <classes>
            <class name="com.enuygun.qa.api.tests.PetApiTest"/>
            <class name="com.enuygun.qa.api.tests.PetApiNegativeTest"/>
        </classes>
    </test>
    
    <!-- Smoke Tests (quick validation) -->
    <test name="Pet API Smoke Tests" preserve-order="true" enabled="false">
        <parameter name="testType" value="smoke"/>
        <parameter name="environment" value="staging"/>
        
        <classes>
            <class name="com.enuygun.qa.api.tests.PetApiTest">
                <methods>
                    <include name="testCreatePet"/>
                    <include name="testGetPetById"/>
                    <include name="testUpdatePet"/>
                    <include name="testDeletePet"/>
                </methods>
            </class>
        </classes>
    </test>
    
    <!-- Performance Tests (basic response time validation) -->
    <test name="Pet API Performance Tests" preserve-order="true" enabled="false">
        <parameter name="testType" value="performance"/>
        <parameter name="environment" value="staging"/>
        <parameter name="maxResponseTime" value="2000"/>
        
        <classes>
            <class name="com.enuygun.qa.api.tests.PetApiTest">
                <methods>
                    <include name="testCreatePet"/>
                    <include name="testGetPetById"/>
                    <include name="testFindPetsByStatusAvailable"/>
                    <include name="testFindPetsByTags"/>
                </methods>
            </class>
        </classes>
    </test>
    
</suite>